import pandas as pd
import numpy as np
from flask import Flask, render_template
from flask import jsonify
from flask import Flask, render_template
import requests
from bs4 import BeautifulSoup
import lxml.html.clean 
import random


def scrape_main_table(saveto_csv = False):
    """Scrapes main table from Worldometers
    and saves it into a csv (static/data/covid16_table.csv)
    unless you set param to False"""

    pop_data= {"Country":{"0":"Ethiopia","1":"Kenya","2":"Soviet union","3":"Rwanda","4":"Cameroon","5":"DRC","6":"Gabon","7":"Eswatini","8":"Namibia","9":"South Africa","10":"Burkina Faso","11":"Ivory Coast","12":"Ghana","13":"Guinea","14":"Mauritania","15":"Nigeria","16":"Senegal","17":"Togo","18":"Algeria","19":"Egypt","20":"Morocco","21":"Sudan","22":"Tunisia","23":"Armenia","24":"Azerbaijan","25":"Bahrain","26":"Cyprus","27":"Georgia","28":"Iraq","29":"Israel","30":"Jordan","31":"Kuwait","32":"Lebanon","33":"Oman","34":"Qatar","35":"Saudi Arabia","36":"Palestine","37":"Turkey","38":"UAE","39":"Kazakhstan","40":"Afghanistan","41":"Bangladesh","42":"Bhutan","43":"India","44":"Iran","45":"Maldives","46":"Nepal","47":"Pakistan","48":"Sri Lanka","49":"China","50":"Hong Kong","51":"Macao","52":"Taiwan","53":"S. Korea","54":"Japan","55":"Mongolia","56":"Brunei","57":"Cambodia","58":"Indonesia","59":"Malaysia","60":"Philippines","61":"Singapore","62":"Thailand","63":"Vietnam","64":"Antigua and Barbuda","65":"Aruba","66":"Cayman Islands","67":"Cuba","68":"Cura\u00e7ao","69":"Dominican Republic","70":"Guadeloupe","71":"Jamaica","72":"Martinique","73":"Puerto Rico","74":"St. Barth","75":"Saint Lucia","76":"Saint Martin","77":"St. Vincent Grenadines","78":"Trinidad and Tobago","79":"U.S. Virgin Islands","80":"Costa Rica","81":"Guatemala","82":"Honduras","83":"Mexico","84":"Panama","85":"Argentina","86":"Bolivia","87":"Brazil","88":"Chile","89":"Colombia","90":"Ecuador","91":"French Guiana","92":"Guyana","93":"Paraguay","94":"Peru","95":"Suriname","96":"Uruguay","97":"Venezuela","98":"Australia","99":"New Zealand","100":"French Polynesia","101":"Belarus","102":"Bulgaria","103":"Czechia","104":"Hungary","105":"Poland","106":"Moldova","107":"Romania","108":"Russia","109":"Slovakia","110":"Ukraine","111":"Channel Islands","112":"Denmark","113":"Estonia","114":"Faeroe Islands","115":"Finland","116":"Iceland","117":"Ireland","118":"Latvia","119":"Lithuania","120":"Norway","121":"Sweden","122":"UK","123":"Albania","124":"Andorra","125":"Bosnia and Herzegovina","126":"Croatia","127":"Gibraltar","128":"Greece","129":"Italy","130":"Malta","131":"North Macedonia","132":"Portugal","133":"San Marino","134":"Serbia","135":"Slovenia","136":"Spain","137":"Austria","138":"Belgium","139":"France","140":"Germany","141":"Liechtenstein","142":"Luxembourg","143":"Monaco","144":"Netherlands","145":"Switzerland","146":"Canada","147":"USA","148":"Total:"},"Population":{"0":114964.0,"1":53771.0,"2":895.0,"3":12952.0,"4":26546.0,"5":89561.0,"6":2226.0,"7":1160.0,"8":2541.0,"9":59309.0,"10":20903.0,"11":26378.0,"12":31073.0,"13":13133.0,"14":4650.0,"15":206140.0,"16":16744.0,"17":8279.0,"18":43851.0,"19":102334.0,"20":36911.0,"21":43849.0,"22":11819.0,"23":2963.0,"24":10139.0,"25":1702.0,"26":1207.0,"27":3989.0,"28":40223.0,"29":8656.0,"30":10203.0,"31":4271.0,"32":6825.0,"33":5107.0,"34":2881.0,"35":34814.0,"36":5101.0,"37":84339.0,"38":9890.0,"39":18777.0,"40":38928.0,"41":164689.0,"42":772.0,"43":1380004.0,"44":83993.0,"45":541.0,"46":29137.0,"47":220892.0,"48":21413.0,"49":1439324.0,"50":7497.0,"51":649.0,"52":23817.0,"53":25779.0,"54":126476.0,"55":3278.0,"56":437.0,"57":16719.0,"58":273524.0,"59":32366.0,"60":109581.0,"61":5850.0,"62":69800.0,"63":97339.0,"64":98.0,"65":107.0,"66":66.0,"67":11327.0,"68":164.0,"69":10848.0,"70":400.0,"71":2961.0,"72":375.0,"73":2861.0,"74":10.0,"75":184.0,"76":39.0,"77":111.0,"78":1399.0,"79":104.0,"80":5094.0,"81":17916.0,"82":9905.0,"83":128933.0,"84":4315.0,"85":45196.0,"86":11673.0,"87":212559.0,"88":19116.0,"89":50883.0,"90":17643.0,"91":299.0,"92":787.0,"93":7133.0,"94":32972.0,"95":587.0,"96":3474.0,"97":28436.0,"98":25500.0,"99":4822.0,"100":281.0,"101":9449.0,"102":6948.0,"103":10709.0,"104":9660.0,"105":37847.0,"106":4034.0,"107":19238.0,"108":145934.0,"109":5460.0,"110":43734.0,"111":174.0,"112":5792.0,"113":1327.0,"114":49.0,"115":5541.0,"116":341.0,"117":4938.0,"118":1886.0,"119":2722.0,"120":5421.0,"121":10099.0,"122":67886.0,"123":2878.0,"124":77.0,"125":3281.0,"126":4105.0,"127":34.0,"128":10423.0,"129":60462.0,"130":442.0,"131":2083.0,"132":10197.0,"133":34.0,"134":8737.0,"135":2079.0,"136":46755.0,"137":9006.0,"138":11590.0,"139":65274.0,"140":83784.0,"141":38.0,"142":626.0,"143":39.0,"144":17135.0,"145":8655.0,"146":37742.0,"147":331003.0,"148":7794798.7290000003},"lat":{"0":9.145,"1":0.023559,"2":21.115141,"3":-1.940278,"4":7.369722,"5":-4.038333,"6":-0.803689,"7":-26.497616,"8":-22.95764,"9":-30.559482,"10":12.238333,"11":7.539989,"12":7.946527,"13":9.945587,"14":21.00789,"15":9.081999,"16":14.497401,"17":8.619543,"18":28.033886,"19":26.820553,"20":31.791702,"21":12.862807,"22":33.886917,"23":40.069099,"24":40.143105,"25":25.930414,"26":35.126413,"27":42.315407,"28":33.223191,"29":31.046051,"30":30.585164,"31":29.31166,"32":33.854721,"33":21.512583,"34":25.354826,"35":23.885942,"36":31.952162,"37":38.963745,"38":23.424076,"39":48.019573,"40":33.93911,"41":23.684994,"42":27.514162,"43":20.593684,"44":32.427908,"45":3.202778,"46":28.394857,"47":30.375321,"48":7.873054,"49":35.86166,"50":22.396428,"51":22.198745,"52":23.69781,"53":40.339852,"54":36.204824,"55":46.862496,"56":4.535277,"57":12.565679,"58":-0.789275,"59":4.210484,"60":12.879721,"61":1.352083,"62":15.870032,"63":14.058324,"64":17.060816,"65":12.52111,"66":19.513469,"67":21.521757,"68":12.16957,"69":18.735693,"70":16.995971,"71":18.109581,"72":14.641528,"73":18.220833,"74":17.89618,"75":13.909444,"76":18.073099,"77":12.984305,"78":10.691803,"79":18.335765,"80":9.748917,"81":15.783471,"82":15.199999,"83":23.634501,"84":8.537981,"85":-38.416097,"86":-16.290154,"87":-14.235004,"88":-35.675147,"89":4.570868,"90":-1.831239,"91":3.933889,"92":4.860416,"93":-23.442503,"94":-9.189967,"95":3.919305,"96":-32.522779,"97":6.42375,"98":-25.274398,"99":-40.900557,"100":-17.679742,"101":53.709807,"102":42.733883,"103":49.817492,"104":47.162494,"105":51.919438,"106":47.411631,"107":45.943161,"108":61.52401,"109":48.669026,"110":48.379433,"111":33.998028,"112":56.26392,"113":58.595272,"114":61.892635,"115":61.92411,"116":64.963051,"117":53.41291,"118":56.879635,"119":55.169438,"120":60.472024,"121":60.128161,"122":55.378051,"123":41.153332,"124":42.546245,"125":43.915886,"126":45.1,"127":36.137741,"128":39.074208,"129":41.87194,"130":35.937496,"131":41.608635,"132":39.399872,"133":43.94236,"134":44.016521,"135":46.151241,"136":40.463667,"137":47.516231,"138":50.503887,"139":46.227638,"140":51.165691,"141":47.166,"142":49.815273,"143":43.750298,"144":52.132633,"145":46.818188,"146":56.130366,"147":37.09024,"148":1.0},"long":{"0":40.489673,"1":37.906193,"2":55.536384,"3":29.873888,"4":12.354722,"5":21.758664,"6":11.609444,"7":31.355667,"8":18.49041,"9":22.937506,"10":-1.561593,"11":-5.54708,"12":-1.023194,"13":-9.696645,"14":-10.940835,"15":8.675277,"16":-14.452362,"17":0.824782,"18":1.659626,"19":30.802498,"20":-7.09262,"21":30.217636,"22":9.537499,"23":45.038189,"24":47.576927,"25":50.637772,"26":33.429859,"27":43.356892,"28":43.679291,"29":34.851612,"30":36.238414,"31":47.481766,"32":35.862285,"33":55.923255,"34":51.183884,"35":45.079162,"36":35.233154,"37":35.243322,"38":53.847818,"39":66.923684,"40":67.709953,"41":90.356331,"42":90.433601,"43":78.96288,"44":53.688046,"45":73.22068,"46":84.124008,"47":69.345116,"48":80.771797,"49":104.195397,"50":114.109497,"51":113.543873,"52":120.960515,"53":127.510093,"54":138.252924,"55":103.846656,"56":114.727669,"57":104.990963,"58":113.921327,"59":101.975766,"60":121.774017,"61":103.819836,"62":100.992541,"63":108.277199,"64":-61.796428,"65":-69.968338,"66":-80.566956,"67":-77.781167,"68":-68.990021,"69":-70.162651,"70":-62.067641,"71":-77.297508,"72":-61.024174,"73":-66.590149,"74":-62.84978,"75":-60.978893,"76":-63.082199,"77":-61.287228,"78":-61.222503,"79":-64.896335,"80":-83.753428,"81":-90.230759,"82":-86.241905,"83":-102.552784,"84":-80.782127,"85":-63.616672,"86":-63.588653,"87":-51.92528,"88":-71.542969,"89":-74.297333,"90":-78.183406,"91":-53.125782,"92":-58.93018,"93":-58.443832,"94":-75.015152,"95":-56.027783,"96":-55.765835,"97":-66.58973,"98":133.775136,"99":174.885971,"100":-149.406843,"101":27.953389,"102":25.48583,"103":15.472962,"104":19.503304,"105":19.145136,"106":28.369885,"107":24.96676,"108":105.318756,"109":19.699024,"110":31.16558,"111":-119.772949,"112":9.501785,"113":25.013607,"114":-6.911806,"115":25.748151,"116":-19.020835,"117":-8.24389,"118":24.603189,"119":23.881275,"120":8.468946,"121":18.643501,"122":-3.435973,"123":20.168331,"124":1.601554,"125":17.679076,"126":15.2,"127":-5.345374,"128":21.824312,"129":12.56738,"130":14.375416,"131":21.745275,"132":-8.224454,"133":12.457777,"134":21.005859,"135":14.995463,"136":-3.74922,"137":14.550072,"138":4.469936,"139":2.213749,"140":10.451526,"141":9.555373,"142":6.129583,"143":7.412841,"144":5.291266,"145":8.227512,"146":-106.346771,"147":-95.712891,"148":1.0}}
    population_latlong = pd.DataFrame(pop_data)
    
    number = random.randint(1000,5999)
    header = {"User-Agent": f"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.{number}.75 Safari/537.36","X-Requested-With": "XMLHttpRequest"}
   
    
    url = 'https://www.worldometers.info/coronavirus' 
    r = requests.get(url, headers=header)
    HCE = BeautifulSoup(r.content, features="lxml")
    df = pd.read_html(lxml.html.clean.clean_html(str(HCE.find('table', id="main_table_countries_today"))).replace('\n', ''))[0]
    covid19_table = df.fillna('0')
    covid19_table.rename(columns = {'Country,Other':'Country', 'Serious,Critical':'Critical'},inplace = True) 
    covid19_table = covid19_table.apply(lambda x: x.replace(',',''))
    final_table = covid19_table.drop(columns='Population')
    final_table = final_table.merge(population_latlong, on='Country')
    final_table.loc[:,'TotalRecovered'] = final_table['TotalRecovered'].apply(pd.to_numeric, errors='coerce')
    final_table.loc[:,'TotalDeaths'] = final_table['TotalDeaths'].apply(pd.to_numeric, errors='coerce')
    final_table.loc[:,'Population'] = final_table['Population'] * 1000
    final_table.loc[:,'PopulationAffected'] = final_table['TotalCases'] / final_table['Population'] *100
    final_table.loc[:,'Cases Recovered'] =  final_table['TotalRecovered'] / final_table['TotalCases'] * 100
    final_table.loc[:,'ActiveCases'] = final_table['ActiveCases'].apply(pd.to_numeric, errors='coerce')
    final_table.loc[:,'Cases Active'] =  final_table['ActiveCases'] / final_table['TotalCases'] * 100
    final_table.loc[:,'Mortality Rate'] =  final_table['TotalDeaths'] / final_table['TotalCases'] * 100
    final_table_lastrow = final_table.iloc[-1, :]
    final_table = final_table[final_table.Country != 'Total:']
    final_table.loc['Total:'] = final_table_lastrow
    
    if saveto_csv == True:
        final_table.to_csv('static/images/covid19_table.csv')
    return final_table


if __name__ == '__main__':
    scrape_main_table()